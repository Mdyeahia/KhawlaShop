@model Khawla.Web.ViewModels.CategoryListingViewModel

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.17.0/jquery.validate.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>
<div class="row">
    <div class="col-lg-12">
        <div class="row">
            <div class="col-lg-12">
                <h1>Category</h1>
                <hr />
            </div>
        </div>
        <div class="row">
            <div class="col-lg-12">
                <form>
                    <input type="text" id="searchTxt" name="search" class="form-control mr-1" placeholder="Search by Name..." value="@Model.SearchTerm">
                    <br />
                    <div class="input-group-append link-danger" id="button-addon4">
                        <button id="searchBtn" class="btn btn-primary mr-1" type="button">Search</button>
                        <button id="resetBtn" class="btn btn-secondary mr-1" type="button">Reset</button>
                        <button id="CreateCategoryBtn" class="btn btn-info" type="button">Create New Category</button>
                    </div>
                </form>
            </div>
        </div>
        <br />
        <div id="CategoryListing">

            <table class="table table-striped">
                <thead style="background-color:darkseagreen">
                    <tr>
                        <td>Id</td>

                        <td>Name</td>

                        <td>Description</td>

                        <td>Actions</td>
                    </tr>

                </thead>
                <tbody>
                    @if (Model.Allcategories != null && Model.Allcategories.Count > 0)
                    {
                        int i = 1;
                        foreach (var category in Model.Allcategories)
                        {
                            <tr>
                                <td>@i</td>

                                <td>@category.Name</td>

                                <td>@category.Description</td>

                                <td>
                                    <button type="button" class="DeleteBtn btn btn-danger" data-id="@category.ID">Delete</button>


                                    <button type="button" class="EditBtn btn btn-primary" data-id="@category.ID" data-toggle="modal" data-target="FormModel">Edit</button>
                                </td>


                            </tr>
                            i++;
                        }

                    }
                    else
                    {
                        <tr>
                            <td colspan="12" class="text-center alert alert-danger">
                                No Category found!!!.
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            @if (Model.Pager != null && Model.Pager.TotalPages > 1)
            {<nav aria-label="Page navigation example">
                    <ul class="pagination justify-content-center">
                        @if (Model.Pager.CurrentPage == 1)
                        {
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1">First</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item">
                                <a class="pageDataLink page-link text-primary" data-href="@Url.Action("CategoryList","Categories" ,new {search=Model.SearchTerm,pageNo=Model.Pager.CurrentPage-1})" style="cursor:pointer">Previous</a>
                            </li>
                        }
                        @for (int page = Model.Pager.StartPage; page < Model.Pager.EndPage; page++)
                        {
                            var acitve = page == Model.Pager.CurrentPage ? "active bg-info" : string.Empty;
                            <li class="page-item @acitve">
                                <a class="pageDataLink page-link text-primary" data-href="@Url.Action("CategoryList","Categories" ,new {search=Model.SearchTerm,pageNo=page})" style="cursor:pointer">@page</a>
                            </li>
                        }
                        @if (Model.Pager.CurrentPage == Model.Pager.EndPage)
                        {
                            <li class="page-item disabled">
                                <a class="page-link" href="#" tabindex="-1">Last</a>
                            </li>
                        }
                        else
                        {
                            <li class="page-item bg-white">
                                <a class="pageDataLink page-link text-primary" data-href="@Url.Action("CategoryList","Categories" ,new {search=Model.SearchTerm,pageNo=Model.Pager.CurrentPage+1})" style="cursor:pointer">Next</a>
                            </li>
                        }
                    </ul>
                </nav>}


        </div>



    </div>

</div>

<div id="picTemplate" style="display:none">
    <img src="" class="image img-thumbnail mt-2"style="width:200px;height:200px" data-id="" />
</div>

<script>

    $("#CreateCategoryBtn").click(function () {
        $.ajax({
            type: "get",
            url: '@Url.Action("Create","Categories")',
        })
            .done(function (response) {
                $("#FormModel").modal("toggle");
                $("#contentArea").html(response);
            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });
    });

    function AttachNewImage(imgId, imgUrl)
    {
        var imgHtml = $("#picTemplate").clone();

        imgHtml.find(".image").attr("data-id", imgId);
        imgHtml.find(".image").attr("src", "/FileStore/images/" + imgUrl);
        $("#picArea").append(imgHtml.html());
        RemoveImageonClick();


    }
    function RemoveImageonClick() {
        $("#picArea .image").click(function () {
            $(this).remove();
            $("#uploadCategoryPic").val("");
            $("#picLength").show();
            $("#picLength").append($("#picArea .image").length + " picture. ");
            $("#errorDiv").hide()
        })
    }
    $("#cancelBtn").click(function () {
        $("#contentArea").html("");
        focusAction("tableContainer");
    });


    $("#searchBtn").click(function () {
        $.ajax({
            url: '@Url.Action("CategoryList", "Categories")',
            data: {

                search: $("#searchTxt").val()
            }

        })
            .done(function (response) {

                $("#tableContainer").html(response);


            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });


    });
    $("#resetBtn").click(function () {
        $.ajax({
            url: '@Url.Action("CategoryList", "Categories")',
            data: {

                search: "",
            }

        })
            .done(function (response) {

                $("#tableContainer").html(response);


            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });


    });
     $(".EditBtn").click(function () {
        $.ajax({
            type: "GET",
            url: "@Url.Action("Edit", "Categories")",
            data: { Id: $(this).attr('data-id') }

        })
            .done(function (response) {

                $('#FormModel').modal('toggle');
                $("#contentArea").html(response);

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });


     });
    $(".DeleteBtn").click(function () {
        swal({
            title: "Confirm?",
            text: "Are you sure you want to delete this Category?",
            icon: "warning",
            buttons: true,
            dangerMode: true
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "Post",
                        url: "@Url.Action("Delete", "Categories")",
                        data: {
                            
                            Id: $(this).attr('data-id'),
                        }
                    })
                        .done(function (response) {

                            $("#tableContainer").html(response);
                            focusAction("contentArea");
                        })
                        .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                            alert("FAIL");
                        });
                }
            });
    });
    $(".pageDataLink").click(function () {

        var url = $(this).attr("data-href");

        $.ajax({

            url: url

        })
            .done(function (response) {


                $("#tableContainer").html(response);


            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            });


    });

    function ReloadTable() {
        $.ajax({

            url:'@Url.Action("CategoryList","Categories")',
            method:'GET',

        })
           .done(function (response) {


               $("#tableContainer").html(response);


           })
           .fail(function (XMLHttpRequest, textStatus, errorThrown) {
               alert("FAIL");
           });

    }

    $("#cancelBtn").click(function () {
        $("#actionContainer").html("");
        focusAction("tableContainer");
    });
</script>